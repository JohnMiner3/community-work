/******************************************************
 *
 * Name:         ifi-security-risk.txt
 *     
 * Design Phase:
 *     Author:   John Miner
 *     Date:     06-07-2017
 *     Purpose:  Show how using ifi does not remove old data. 
 * 
 ******************************************************/

--
--  Test 1 - Zero out file
--

-- Use Master
USE [master]
GO

-- Create new database
CREATE DATABASE TestWithZeroInitialization;
GO

-- Use the database
USE [TestWithZeroInitialization]
GO 
  
-- Create table
CREATE TABLE JunkData
(
   JunkDataID int identity,
   JunkDataValue char(8000) 
      DEFAULT REPLICATE('Junk', 2000)
)
GO
  
-- Do not see counts
SET NOCOUNT ON
GO
  
-- Load table with data
DECLARE @Counter int
SELECT @Counter = 0
WHILE @Counter < 20000
BEGIN
   INSERT JunkData DEFAULT VALUES
   SELECT @Counter = @Counter + 1
END
GO

-- Get Count
SELECT COUNT(*) FROM dbo.[JunkData];
GO

-- Drop old database
DROP DATABASE TestWithZeroInitialization;
GO


--
--  Test 2 - Create database after enabling IFI
--

-- Use Master
USE [master]
GO

-- Create new database
CREATE DATABASE TestSecurityExposure;
GO

-- Do we find any junk?
DBCC PAGE ('TestSecurityExposure', 1, 200, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 400, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 600, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 800, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 1000, 2)
DBCC PAGE ('TestSecurityExposure', 1, 1500, 2)
DBCC PAGE ('TestSecurityExposure', 1, 2000, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 2500, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 3000, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 3500, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 4000, 2) 
DBCC PAGE ('TestSecurityExposure', 1, 4500, 2) 